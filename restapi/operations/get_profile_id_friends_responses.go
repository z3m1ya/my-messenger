// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetProfileIDFriendsOKCode is the HTTP code returned for type GetProfileIDFriendsOK
const GetProfileIDFriendsOKCode int = 200

/*
GetProfileIDFriendsOK Friend list

swagger:response getProfileIdFriendsOK
*/
type GetProfileIDFriendsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetProfileIDFriendsOK creates GetProfileIDFriendsOK with default headers values
func NewGetProfileIDFriendsOK() *GetProfileIDFriendsOK {

	return &GetProfileIDFriendsOK{}
}

// WithPayload adds the payload to the get profile Id friends o k response
func (o *GetProfileIDFriendsOK) WithPayload(payload []string) *GetProfileIDFriendsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get profile Id friends o k response
func (o *GetProfileIDFriendsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProfileIDFriendsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetProfileIDFriendsNotFoundCode is the HTTP code returned for type GetProfileIDFriendsNotFound
const GetProfileIDFriendsNotFoundCode int = 404

/*
GetProfileIDFriendsNotFound Profile not found

swagger:response getProfileIdFriendsNotFound
*/
type GetProfileIDFriendsNotFound struct {
}

// NewGetProfileIDFriendsNotFound creates GetProfileIDFriendsNotFound with default headers values
func NewGetProfileIDFriendsNotFound() *GetProfileIDFriendsNotFound {

	return &GetProfileIDFriendsNotFound{}
}

// WriteResponse to the client
func (o *GetProfileIDFriendsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
