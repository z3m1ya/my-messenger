// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "Profile Service API",
    "version": "1.0.0"
  },
  "paths": {
    "/profile/{id}": {
      "get": {
        "summary": "Get profile by ID",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile data",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "friends": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "put": {
        "summary": "Update profile",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/profile/{id}/friend-requests": {
      "post": {
        "summary": "Send friend request",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Friend request sent"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/profile/{id}/friend-requests/{targetId}": {
      "patch": {
        "summary": "Accept or reject friend request",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "targetId",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "accept",
              "reject"
            ],
            "type": "string",
            "name": "action",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Friend request processed"
          },
          "400": {
            "description": "Invalid action"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/profile/{id}/friends": {
      "get": {
        "summary": "Get friend list by profile ID",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Friend list",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/profile/{id}/friends/{targetId}": {
      "delete": {
        "summary": "Remove friend",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "targetId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Friend removed"
          },
          "404": {
            "description": "Friend not found"
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "Profile Service API",
    "version": "1.0.0"
  },
  "paths": {
    "/profile/{id}": {
      "get": {
        "summary": "Get profile by ID",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile data",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "friends": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "put": {
        "summary": "Update profile",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/profile/{id}/friend-requests": {
      "post": {
        "summary": "Send friend request",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "targetId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Friend request sent"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/profile/{id}/friend-requests/{targetId}": {
      "patch": {
        "summary": "Accept or reject friend request",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "targetId",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "accept",
              "reject"
            ],
            "type": "string",
            "name": "action",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Friend request processed"
          },
          "400": {
            "description": "Invalid action"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/profile/{id}/friends": {
      "get": {
        "summary": "Get friend list by profile ID",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Friend list",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/profile/{id}/friends/{targetId}": {
      "delete": {
        "summary": "Remove friend",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "targetId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Friend removed"
          },
          "404": {
            "description": "Friend not found"
          }
        }
      }
    }
  }
}`))
}
